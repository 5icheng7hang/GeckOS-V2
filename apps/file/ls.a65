/****************************************************************************
   
    OS/A65 Version 2.0.0
    lib6502 ls program

    Copyright (C) 1997-1998 Andre Fachat 

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

****************************************************************************/

#include "lib6502.i65"

main	.(
	.zero
argp	.word 0
	.text

	; stores argp in a/y to argp var
	jsr getopts
	bcc optsok

	lda #<usagetxt
	ldy #>usagetxt
	jmp strout

optsok	lda (argp),y
	beq jok
	tya
	adc argp
	sta argp
	bcc ok
	inc argp+1
	bne ok

jok	lda #<joker
	sta argp
	lda #>joker
	sta argp+1	; always not null

ok
	jsr crlfout

	lda argp
	ldy argp+1

	jsr fopendir
	bcc opened
	rts

opened	stx fileno
rd	ldx fileno
	lda #<entry
	ldy #>entry
	jsr freaddir
	bcc doit
eof
	ldx fileno
	jsr fclose
	lda #0
	rts
doit
	bit optlong
	bpl shortx

	lda entry+FD_PERM+1
	and #>S_IFMT
	cmp #>S_IFMNAME
	bne chkperms
shortx	jmp short

chkperms
	lda entry+FD_PERM+1
	and #>S_IFMT
	cmp #>S_IFMFREE
	beq noperms
	cmp #>S_IFMSIZE
	beq noperms

	; user
	ror entry+FD_PERM+1
	lda #"r"
	jsr permout
	rol entry+FD_PERM
	lda #"w"
	jsr permout
	rol entry+FD_PERM
	lda #"x"
	jsr permout

	; group
	rol entry+FD_PERM
	lda #"r"
	jsr permout
	rol entry+FD_PERM
	lda #"w"
	jsr permout
	rol entry+FD_PERM
	lda #"x"
	jsr permout

	; others
	rol entry+FD_PERM
	lda #"r"
	jsr permout
	rol entry+FD_PERM
	lda #"w"
	jsr permout
	rol entry+FD_PERM
	lda #"x"
	jsr permout

	jsr spout

	lda entry+FD_OWNER
	ldy entry+FD_OWNER+1
	jsr intout

	lda entry+FD_GROUP
	ldy entry+FD_GROUP+1
	jsr intout
noperms
	; long output
	lda entry+FD_LENGTH
	sta BIN
	lda entry+FD_LENGTH+1
	sta BIN+1
	lda entry+FD_LENGTH+2
	sta BIN+2
	lda entry+FD_LENGTH+3
	sta BIN+3
	jsr longint2bcd
	ldy #9
	jsr bcdout
	jsr spout
	
short
	lda #<entry+FD_NAME
	ldy #>entry+FD_NAME
	jsr strout

	jsr crlfout
	jmp rd


intout 	.(
	sta BIN
	sty BIN+1
	jsr wordint2bcd
	ldy #5
	jsr bcdout
	jmp spout
	.)

permout	.(
	bcs out
	lda #"-"
out	jmp stdout
	.)

	.data

optslst	.asc "l",0
optsflg
optlong	.byt 0

joker	.asc "*", 0
usagetxt
	.asc 13,10,"Usage:",13,10," ls [opts] <dirmask>"
	.asc 13,10,"Options:"
	.asc 13,10,"-l    print more file information"
	.byt 0

	.bss
fileno	.byt 0
entry	.dsb FD_NAME+MAX_FILENAME
BIN	.byt 0,0,0,0
BCD	.byt 0,0,0,0,0
	.text

#include ../common.a65
	.)

